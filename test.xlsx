Directory Structure (POC App)

app/ (core application)

api/ → FastAPI routes + schemas

agent/ → orchestrator + specialists + factory

tools/ → deterministic tools (I/O, portfolio, recommend, compliance)

prompts/ → all prompts as modular .py files

mcp/ → optional MCP client + demo servers

configs/ → central YAML config (model, tools, budgets)

data/ → demo datasets (clients.csv, market.json)

main.py → entrypoint (creates app, loads agents)


------

Our POC app is organized into a simple, modular directory structure:

app/ – the core application

api/ – FastAPI routes and schemas

agent/ – the orchestrator, specialist agents, and factory

tools/ – deterministic tools for portfolio analysis, recommendations, compliance, and I/O

prompts/ – modular Python files for all prompts

mcp/ – optional MCP client and demo servers

configs/ – central YAML config for models, tools, and budgets

data/ – demo datasets like clients.csv and market.json

main.py – entrypoint that initializes the app and loads agents
