| Feature Category             | **Letta**                                      | **LangChain**                                   | **LangGraph**                                    |
| ---------------------------- | ---------------------------------------------- | ----------------------------------------------- | ------------------------------------------------ |
| ðŸ§  **Memory Granularity**    | Block-based shared memory (global & per-agent) | Multiple memory types (summary, buffer, vector) | Scratchpad, node-level, and global memory        |
| ðŸ¤– **Agent Flexibility**     | Built-in multi-agent design with roles & APIs  | AgentExecutor + Tool usage (more manual)        | Graph-based agents with dynamic routing          |
| ðŸ’» **UI & Dev Experience**   | Web UI, ADE, chat templates, TypeScript SDK    | Python API and LangSmith (analytics)            | Code-based graphs, visualizable via SDKs         |
| ðŸš€ **Deployment Mode**       | Self-hosted (Docker / Letta Desktop) + Cloud   | Self-hosted, serverless, notebooks              | Python package (run in-memory / serverless)      |
| ðŸ”„ **Inter-Agent Messaging** | Yes (API for sending async messages)           | No native messaging; needs orchestration        | Limited; relies on state transitions, not direct |
| ðŸ“¦ **Tooling Support**       | TypeScript SDK, Python SDK                     | Wide ecosystem of tools (retrievers, chains)    | Tool usage within graph nodes                    |
