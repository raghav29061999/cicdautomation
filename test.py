Traditionally, most agent frameworks followed a tool-first or orchestration-first approach. In this model, the developer defined a set of tools, workflows, or graphs up front, and the language model was used mainly to decide which tool to call at each step. The LLM acted more like a decision engine inside a rigid orchestration pipeline. Strands introduced a model-first approach, which flips this order: the foundation model itself becomes the primary reasoning entity, driving the workflow loop (the “Agent Loop”). Instead of hard-coding the orchestration, the LLM dynamically reasons about context, decides when to invoke tools, and adapts its behavior on the fly. This makes Strands more flexible, reduces boilerplate orchestration code, and places the intelligence squarely inside the model rather than the framework.
